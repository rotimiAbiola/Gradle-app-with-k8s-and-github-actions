name: 'Terraform'

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      tf_actions_working_dir: terraform
    runs-on: ubuntu-latest


    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}

    steps:
    - name: checkout repository
      uses: actions/checkout@v2

    - name: setup terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.6

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Initialize Terraform
      id: init
      run: terraform init

    - name: Terraform validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    # - name: terraform apply
    #   run: terraform apply -auto-approve

    # - name: Destroy Infra
    #   run: terraform destroy -auto-approve

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
    
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
    
          </details>
    
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
    
          <details><summary>Show Plan</summary>
    
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
    
          </details>
    
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
    
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })



    # - name: 'Install pre-reqs'
    #   run: |
    #     curl -SL "https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip" --output terraform.zip
    #     unzip "terraform.zip"
    #     mv terraform /usr/local/bin
    #     terraform --version
    #     rm terraform.zip
      
    # - name: 'Install TFLint'
    #   run: |
    #     wget https://github.com/terraform-linters/tflint/releases/download/v0.44.1/tflint_linux_amd64.zip
    #     unzip tflint_linux_amd64
    #     mv tflint /usr/local/bin

